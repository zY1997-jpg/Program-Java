class Solution {
    public int[] maxSlidingWindow(int[] nums, int k) {

        Deque<Integer> maxqueue=new LinkedList<>();
        int n=nums.length;
        int[] res=new int[n-k+1];
        for(int i=0;i<k;i++){
            while(!maxqueue.isEmpty()&&nums[i]>=nums[maxqueue.peekLast()]){
                maxqueue.pollLast();
            }
            maxqueue.offerLast(i);
        }

        res[0]=nums[maxqueue.peekFirst()];

        for(int i=k;i<n;i++){
            while(!maxqueue.isEmpty()&&nums[i]>=nums[maxqueue.peekLast()]){
                maxqueue.pollLast();
            }
            maxqueue.offerLast(i);

            while(maxqueue.peekFirst()<=i-k){
                maxqueue.pollFirst();
            }
            res[i-k+1]=nums[maxqueue.peekFirst()];
        }

        return res;



    }
}
